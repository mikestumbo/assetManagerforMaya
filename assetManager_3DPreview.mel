// Asset Manager 3D Preview MEL Script - Production Safe Version
// Creates a dedicated 3D viewport panel with independent camera for the Asset Manager
// Compatible with Maya 2025.3+ with Arnold/RenderMan conflict protection
// Version: 1.2.0 - Production Grade Renderer Safety (FIXED SYNTAX)

global proc int assetManager_validatePanelName(string $panelName) {
    // Simple validation to check panel isn't corrupted
    if (`match "\\|{3,}" $panelName` != "") {
        return 0; // Corrupted
    }
    if (!`modelPanel -exists $panelName`) {
        return 0; // Doesn't exist
    }
    return 1; // Valid
}

global proc string assetManager_sanitizePanelName(string $baseName) {
    // CRITICAL: Prevent panel name corruption that causes |||||||| syntax errors
    string $cleanName = `substitute "[^a-zA-Z0-9_]" $baseName "_"`;  // Only alphanumeric and underscore
    $cleanName = `substitute "^[0-9]" $cleanName "p"`;              // Ensure starts with letter
    $cleanName = `substitute "_{2,}" $cleanName "_"`;               // No multiple underscores
    if (size($cleanName) > 50) $cleanName = `substring $cleanName 1 50`; // Limit length
    return $cleanName;
}

global proc assetManager_setRendererSafe(string $panelName) {
    // CRITICAL: Isolate preview from Arnold/RenderMan conflicts
    if (!`modelPanel -exists $panelName`) return;
    
    // Force safe OpenGL renderer to avoid production renderer conflicts
    catch(`modelEditor -edit -rendererName "base_OpenGL_Renderer" $panelName`);
    
    // Disable features that conflict with Arnold/RenderMan
    catch(`modelEditor -edit -useDefaultMaterial true $panelName`);
    catch(`modelEditor -edit -displayLights "none" $panelName`);
    catch(`modelEditor -edit -shadows false $panelName`);
    catch(`modelEditor -edit -displayTextures true $panelName`);
    
    print("✓ Preview panel isolated from renderer conflicts\n");
}

global proc string assetManager_create3DPreview(string $parentLayout) {
    // ENHANCED: Create unique panel name with timestamp to avoid conflicts
    string $timestamp = `date -format "SSSS"`;
    string $baseName = "assetMgrPreview" + $timestamp;
    string $panelName = assetManager_sanitizePanelName($baseName);
    string $cameraName = "assetMgrPreviewCam" + $timestamp;
    
    // AGGRESSIVE CLEANUP: Remove any existing panels/cameras with similar names
    string $allPanels[] = `getPanel -allPanels`;
    string $panel;
    for ($panel in $allPanels) {
        if (`gmatch $panel "*assetMgrPreview*"`) {
            print("Cleaning up existing panel: " + $panel + "\n");
            if (`modelPanel -exists $panel`) {
                catch(`deleteUI $panel`);
            }
        }
    }
    
    // Clean up any existing cameras
    string $allCameras[] = `ls -cameras`;
    string $cam;
    for ($cam in $allCameras) {
        if (`gmatch $cam "*assetMgrPreview*"`) {
            string $transforms[] = `listRelatives -parent $cam`;
            if (size($transforms) > 0) {
                print("Cleaning up existing camera: " + $transforms[0] + "\n");
                catch(`delete $transforms[0]`);
            }
        }
    }
    
    // Ensure our specific names are clear
    if (`modelPanel -exists $panelName`) {
        catch(`deleteUI $panelName`);
    }
    if (`objExists $cameraName`) {
        catch(`delete $cameraName`);
    }
    
    // Create dedicated camera for this preview panel
    string $cameraNodes[] = `camera -name $cameraName`;
    string $camera = $cameraNodes[0];
    string $cameraShape = $cameraNodes[1];
    
    // Configure camera for preview
    catch(`setAttr ($cameraShape + ".focalLength") 50`);
    catch(`setAttr ($cameraShape + ".nearClipPlane") 0.1`);
    catch(`setAttr ($cameraShape + ".farClipPlane") 10000`);
    
    // Position camera for good asset view
    catch(`setAttr ($camera + ".translateX") 5`);
    catch(`setAttr ($camera + ".translateY") 3`);
    catch(`setAttr ($camera + ".translateZ") 5`);
    catch(`setAttr ($camera + ".rotateX") -15`);
    catch(`setAttr ($camera + ".rotateY") 45`);
    catch(`setAttr ($camera + ".rotateZ") 0`);
    
    // Create model panel with renderer safety
    string $panel = `modelPanel -label "Asset Preview" -camera $camera $panelName`;
    
    if ($panel == "" || !`modelPanel -exists $panel`) {
        print("ERROR: Failed to create 3D preview panel\n");
        if (`objExists $camera`) catch(`delete $camera`);
        return "";
    }
    
    // Apply renderer safety immediately
    assetManager_setRendererSafe($panel);
    
    // Configure model editor for asset preview
    catch(`modelEditor -edit
        -displayAppearance "smoothShaded"
        -wireframeOnShaded 0
        -displayTextures 1
        -displayLights "default"
        -shadows 0
        -useDefaultMaterial 1
        -xray 0
        -jointXray 0
        -activeComponentsXray 0
        -maximumNumHardwareLights 1
        -selectionHiliteDisplay 1
        -useRGBImagePlane 1
        -backfaceCulling 0
        -xrayJoints 0
        -displayTextures 1
        -smoothWireframe 0
        -lineWidth 1
        -textureAnisotropic 0
        -textureHilight 1
        -textureMaxSize 1024
        -fogging 0
        -fogSource "fragment"
        -fogMode "linear"
        -fogDensity 0.1
        -fogStart 0.0
        -fogEnd 100.0
        -fogColor 0.5 0.5 0.5 1.0
        -depthOfField 0
        -maxConstantTransparency 1.0
        -rendererName "base_OpenGL_Renderer"
        -objectFilterShowInHUD 1
        -isFiltered 0
        -colorResolution 256
        -bumpResolution 512
        -textureCompression 0
        -textureMemoryUsed 0
        -wireframeBackingStore 0
        -smallObjectCulling 0
        -smallObjectThreshold -1.0
        -interactiveDisableShadows 0
        -interactiveBackFaceCull 0
        -sortTransparent 1
        -controllers 1
        -nurbsCurves 1
        -nurbsSurfaces 1
        -polymeshes 1
        -subdivSurfaces 1
        -planes 1
        -lights 1
        -cameras 1
        -imagePlane 1
        -joints 1
        -ikHandles 1
        -deformers 1
        -dynamics 1
        -particleInstancers 1
        -fluids 0
        -hairSystems 0
        -follicles 0
        -nCloths 0
        -nParticles 0
        -nRigids 0
        -dynamicConstraints 0
        $panel`);
    
    print("✓ Asset Manager 3D Preview created: " + $panel + "\n");
    print("✓ Camera: " + $camera + "\n");
    print("✓ Renderer safety applied\n");
    
    return $panel;
}

print("=== Asset Manager 3D Preview MEL Script Loaded ===\n");
print("Version: 1.2.0 - Production Safe with Corruption Prevention\n");
print("Available function: assetManager_create3DPreview(parentLayout)\n");
print("==================================================\n");
